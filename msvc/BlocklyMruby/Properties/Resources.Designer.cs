//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlocklyMruby.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlocklyMruby.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   // Do not edit this file; automatically generated by build.py.
        ///&apos;use strict&apos;;
        ///
        ///var COMPILED = !0,
        ///	goog = goog || {};
        ///goog.global = this;
        ///goog.isDef = function (a) {
        ///	return void 0 !== a
        ///};
        ///goog.exportPath_ = function (a, b, c) {
        ///	a = a.split(&quot;.&quot;);
        ///	c = c || goog.global;
        ///	a[0] in c || !c.execScript || c.execScript(&quot;var &quot; + a[0]);
        ///	for (var d; a.length &amp;&amp; (d = a.shift()) ;) !a.length &amp;&amp; goog.isDef(b) ? c[d] = b : c = c[d] ? c[d] : c[d] = {}
        ///};
        ///goog.define = function (a, b) {
        ///	var c = b;
        ///	COMP [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string blockly {
            get {
                return ResourceManager.GetString("blockly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   &lt;!doctype html&gt;
        ///&lt;html lang=&quot;ja-jp&quot;&gt;
        ///&lt;head&gt;
        ///	&lt;meta charset=&quot;utf-8&quot; /&gt;
        ///	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;
        ///	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;
        ///	&lt;title&gt;Blockly Demo: Resizable Blockly (Part 2)&lt;/title&gt;
        ///	&lt;style&gt;
        ///		html, body {
        ///			height: 100%;
        ///			margin: 0;
        ///		}
        ///
        ///		body {
        ///			background-color: #fff;
        ///			font-family: sans-serif;
        ///			overflow: hidden;
        ///		}
        ///
        ///		h1 {
        ///			font-weight: normal;
        ///			font-size: 140%;
        ///		}
        ///
        ///		table {
        ///			height: 100%;
        ///		 [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // This file was automatically generated.  Do not modify.
        ///
        ///&apos;use strict&apos;;
        ///
        ///goog.provide(&apos;Blockly.Msg.ja&apos;);
        ///
        ///goog.require(&apos;Blockly.Msg&apos;);
        ///
        ///Blockly.Msg.ADD_COMMENT = &quot;コメントを追加&quot;;
        ///Blockly.Msg.CHANGE_VALUE_TITLE = &quot;値を変更します。&quot;;
        ///Blockly.Msg.CLEAN_UP = &quot;ブロックの整理&quot;;
        ///Blockly.Msg.COLLAPSE_ALL = &quot;ブロックを折りたたむ&quot;;
        ///Blockly.Msg.COLLAPSE_BLOCK = &quot;ブロックを折りたたむ&quot;;
        ///Blockly.Msg.COLOUR_BLEND_COLOUR1 = &quot;色 1&quot;;
        ///Blockly.Msg.COLOUR_BLEND_COLOUR2 = &quot;色 2&quot;;
        ///Blockly.Msg.COLOUR_BLEND_HELPURL = &quot;http://meyerweb.com/eric/tools/color-blend/&quot;;
        ///Blockly.M [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ja {
            get {
                return ResourceManager.GetString("ja", resourceCulture);
            }
        }
    }
}
